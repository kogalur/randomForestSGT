#ifndef  RF_STACK_INCOMING_H
#define  RF_STACK_INCOMING_H
#include "snpAuxiliaryInfo.h"
void stackTNQualitativeIncoming(char      mode,
                                AuxiliaryDimensionConstants *dimConst,
                                SNPAuxiliaryInfo **incomingAuxiliaryInfoList,
                                uint      ntree,
                                uint      bootstrapSize,
                                uint      observationSize,
                                char    **sexpStringIO,
                                uint     *rmbr_id_,
                                uint     *ambr_id,
                                uint     *tn_rcnt_,
                                uint     *tn_acnt_,
                                uint     *incomingStackCount,
                                uint   ***rmbr_id_ptr,
                                uint   ***ambr_id_ptr,
                                uint   ***tn_rcnt_ptr,
                                uint   ***tn_acnt_ptr);
void stackTNQuantitativeIncoming(char         mode,
                                 AuxiliaryDimensionConstants *dimConst,
                                 SNPAuxiliaryInfo **incomingAuxiliaryInfoList,
                                 uint        ntree,
                                 char      **sexpStringIO,
                                 uint        timeIndex,
                                 uint        startTimeIndex,
                                 uint        statusIndex,
                                 uint        rFactorCount,
                                 uint        rNonFactorCount,
                                 uint        eventTypeSize,
                                 uint        sortedTimeInterestSize,
                                 uint       *tLeafCount,
                                 double     *tn_mort_,
                                 double     *tn_surv_,
                                 double     *tn_nlsn_,
                                 double     *tn_cshz_,
                                 double     *tn_cifn_,
                                 double     *tn_khzf_,
                                 double     *tn_regr_,
                                 uint       *tn_clas_,
                                 uint       *incomingStackCount,
                                 double  ****tn_mort_ptr,
                                 double  ****tn_surv_ptr,
                                 double  ****tn_nlsn_ptr,
                                 double *****tn_cshz_ptr,
                                 double *****tn_cifn_ptr,
                                 double  ****tn_khzf_ptr,
                                 double  ****tn_regr_ptr,
                                 uint   *****tn_clas_ptr);
#endif
